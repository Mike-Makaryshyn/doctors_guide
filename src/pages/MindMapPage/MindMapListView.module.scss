/* Контейнер (центр по горизонталі, прокрутка) */
.container {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    width: 100%;
    padding: 20px;
    overflow-y: auto;
    box-sizing: border-box;
}
  
/* ======== Рівень 1 (rootList) ======== */
.rootList {
    list-style: none;
    margin: 0;
    padding: 0;
}
  
/* Елементи 1-го рівня */
.rootList > .listItem {
    position: relative;
    margin: 10px 0;
    padding: 0;
}
  
/* Вимикаємо лінії для кореневого рівня */
.rootList > .listItem::before {
    content: none;
}
  
/* ======== Рівень 2 ======== */
.rootList .nestedList {
    list-style: none;
    margin: 0;
    padding: 0;
    position: relative;
}
  
/* Відступ для елементів 2-го рівня */
.rootList .nestedList .listItem {
    position: relative;
    margin: 10px 0 10px 60px;
    padding: 0;
}

/* Переміщуємо відображення вертикальної лінії на контейнер плитки (.nodeContainer) для 2-го рівня */
.rootList .nestedList .listItem > .nodeContainer {
    position: relative;
}
.rootList .nestedList .listItem > .nodeContainer::before {
    content: "";
    position: absolute;
    left: -30px;
    top: 0;
    width: 2px;
    height: 100%;
    background-color: #2ecc71;
}

/* Якщо елемент є останнім у групі (2-й рівень), обрізаємо вертикальну лінію */
.rootList .nestedList .listItem.lastItem > .nodeContainer::before {
    height: 50%;
}

/* ======== Рівень 3 ======== */
.rootList .nestedList .nestedList {
    list-style: none;
    margin: 0;
    padding: 0;
    position: relative;
}
  
/* Відступ для елементів 3-го рівня */
.rootList .nestedList .nestedList .listItem {
    position: relative;
    margin: 10px 0 10px 60px;
    padding: 0;
}

/* Переміщуємо відображення вертикальної лінії на .nodeContainer для 3-го рівня */
.rootList .nestedList .nestedList .listItem > .nodeContainer {
    position: relative;
}
.rootList .nestedList .nestedList .listItem > .nodeContainer::before {
    content: "";
    position: absolute;
    left: -30px;
    top: 0;
    width: 2px;
    height: 100%;
    background-color: #e74c3c;
}

/* Для останнього елемента 3-го рівня обрізаємо вертикальну лінію */
.rootList .nestedList .nestedList .listItem.lastItem > .nodeContainer::before {
    height: 50%;
}

/* ===== Плитка ===== */
.tile {
    display: inline-block;
    padding: 15px;
    min-height: 50px;
    border-radius: 10px;
    background: #ffffff;
    transition: transform 0.2s ease, background 0.3s ease;
    cursor: pointer;
    font-size: 17px;
    font-weight: bold;
    color: #013b6e;
    text-align: center;
    overflow: hidden;
    border: none;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    position: relative;
    z-index: 1;
}
  
/* Стан «натиснутої» плитки */
.tilePressed {
    background: #2a7c6f;
    color: #ffffff;
    transform: translateY(1px);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}
  
/* ===== Нова реалізація горизонтальної «гілки» ===== */
.tileWrapper {
    position: relative;
}
  
.tileWrapper::after {
    content: "";
    position: absolute;
    left: -30px;
    top: 50%;
    width: 30px;
    height: 2px;
    background-color: #2ecc71; /* Колір зеленої лінії для 2-го рівня */
    transform: translateY(-50%);
}
  
/* Для 3-го рівня змінюємо колір горизонтальної лінії */
.rootList .nestedList .nestedList .tileWrapper::after {
    background-color: #e74c3c;
}

/* Якщо потрібно, можна залишити інші правила для обрізання ліній за допомогою :last-of-type,
   але тепер ми керуємо цим через клас lastItem, який встановлюється в React. */